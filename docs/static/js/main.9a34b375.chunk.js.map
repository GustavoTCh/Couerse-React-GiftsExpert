{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","key","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAe1C,OACI,0BAAMC,SARY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAY,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OAClCN,EAAc,OAKd,4BAAKD,GACL,2BACIQ,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YAsB/BZ,EAAYe,WAAa,CACrBd,Y,OAAae,EAAUC,KAAKC,Y,2BC7BnBC,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0FAC2EC,UAAUH,GADrF,qBAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAYbM,GAZa,4CAAH,sDCARO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDZ,SAACA,GAAc,IAAD,EACblB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OAVAC,qBAAU,WACNxB,EAASC,GAAUwB,MAAK,SAAAC,GACpBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGjB,CAACpB,IAGGqB,EDZ0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEbnBkB,EAAe,WAAO,IAAD,EAEM9C,mBAAS,CAAC,cAFhB,mBAEvB+C,EAFuB,KAEXC,EAFW,KAI9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAajD,YAAaiD,IAC1B,6BACA,4BAEQD,EAAWpB,KAAI,SAACT,GAAD,OACX,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,UCbtC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.9a34b375.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategory}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handledSubmit = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategory(cats=> [inputValue,...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handledSubmit}>\n            <h1>{inputValue}</h1>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.protoTypes = {\n    setCategory: PropTypes.func.isRequired\n}\n","\n\nexport const getGifts = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=9B2GDKgQxSVvXyLJwNIFI9YVjl62ZBZB&q=${encodeURI(category)}&limit=5`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifts = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    return gifts;\n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    return (\n        <div className='card animate__animated animate__rubberBand'>\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifts } from '../hooks/useFetchGifts'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifts(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">loading</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifts } from '../helpers/getGifts'\n\nexport const useFetchGifts = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n    useEffect(() => {\n        getGifts(category).then(imgs => {\n            setState({\n                data:imgs,\n                loading:false\n            });\n        });\n    }, [category]);\n\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Piece']);\n    \n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategory={setCategories}/>\n            <hr />\n            <ol>\n                {\n                    categories.map((category)=>\n                        <GifGrid \n                            key={category}\n                            category={category}\n                        />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}